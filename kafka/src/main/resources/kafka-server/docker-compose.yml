version: "3"

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

# Important Commands
#  docker exec -it kafka-server_kafka_1 kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic logistics --from-beginning

### Topic Creation without docker exec in to container ###

# Topic Creation
#  --------------------
  # docker exec root_kafka_1 kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 2 --partitions 3 --topic my-topic
# ---> Mentioned above command give us an error because, we have 1 broker & setting up replication factor 2
# Error while executing topic command : Replication factor: 2 larger than available brokers: 1


# docker exec root_kafka_1 kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 3 --topic my-topics

# docker exec root_kafka_1 kafka-topics.sh kafka-topics.sh --create --zookeeper zookeeper:2181 --replication-factor 1 --partitions 1 --topic my-topic

# docker exec -it root_kafka_1 kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-topic

# List Topic
#  --------------
  # docker exec root_kafka_1 kafka-topics.sh  --list --zookeeper zookeeper:2181
  
# Describe a topic
#  -------------------
  # docker exec root_kafka_1 kafka-topics.sh  --describe --topic my-topic --zookeeper zookeeper:2181
  
# Creating Producers
#  ---------------------
  # docker exec -it root_kafka_1 kafka-console-producer.sh --bootstrap-server localhost:9092 --topic my-topic

# Creating Consumers
#  ---------------------
  # docker exec -it root_kafka_1 kafka-console-consumer.sh --bootstrap-server localhost:9092 --topic my-topic --from-beginning

# Listing Consumers Groups
#  --------------------------
  # docker exec root_kafka_1 kafka-consumer-groups.sh --bootstrap-server localhost:9092 --list

# Describe Consumers Groups
#  ----------------------------
  # docker exec root_kafka_1 kafka-consumer-groups.sh --bootstrap-server localhost:9092 --describe --group GROUPNAME

# Consumer Offsets  (Consumer information stored in consumer offsets by kafka)
#  --------------------------------------------------------------------------------
# docker exec root_kafka_1 kafka-topics.sh --bootstrap-server localhost:9092 --list

# docker-compose -f docker-compose.yml up

# docker-compose -f docker-compose.yml up -d


# https://github.com/bitnami/bitnami-docker-kafka
